\ProvidesPackage{luacensor}
[2022/02/01
 Redact sensitive information using Lua]
% This work may be distributed and/or modified under the 
% conditions of the LaTeX Project Public License, either version 1.3 
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX 
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Elijah Z Granet.
\RequirePackage{luacode}
\hyphenation{■-■}
\newcommand{\donothing}[1]{■}
\newcommand{\onething}[1]{■}
\newcommand{\twothings}[1]{■■}
\begin{luacode}
--thanks to TeX.SE users Henri Menke and David Carlile
local function rndstrng()
    local toks = token.scan_toks()
        local on = true
for n, t in ipairs(toks) do
    if t.csname == "begin" or t.csname == "end" then
       on = false
    end
   if not(on) and t.cmdname == "right_brace" then
     on = true
end
 if on and t.cmdname == "escape" then
local letter = token.create'onething'
 toks[n] = letter
    elseif on and t.cmdname ==  "letter" then
            local f = math.random (1,20)
            	if f == 2 then
               local letter = token.create'donothing'
 toks[n] = letter
         		            elseif f == 3 then
                    

               local letter = token.create'twothings'  toks[n] = letter
 elseif f == 4 then
 local letter = token.create'donothing'
  toks[n] = letter
  
elseif f == 5 then
                    

               local letter = token.create'twothings'  toks[n] = letter
               elseif f == 7 then
                    

               local letter = token.create'twothings'  toks[n] = letter
               elseif f == 8 then
                    

               local letter = token.create'donothing'  toks[n] = letter
               
   else 
               local letter = token.create'onething'
 toks[n] = letter
            	end
            	elseif
            on and t.cmdname == "other_char" then
            local f = math.random (1,2)
            	if f == 2 then
               local letter = token.create'donothing'
 toks[n] = letter
         		            elseif f == 3 then
                    
               local letter = token.create'twothings'  toks[n] = letter
 elseif f == 4 then
 local letter = token.create'onething'
  toks[n] = letter
           		            elseif f == 5 then
                    

               local letter = token.create'twothings'  toks[n] = letter
 elseif f == 6 then
                    

               local letter = token.create'twothings'  toks[n] = letter

   else 
               local letter = token.create'onething'
 toks[n] = letter
 
            	end
                    end
    end
        token.put_next(toks)
end
local lft = lua.get_functions_table()
lft[#lft + 1] = rndstrng
token.set_lua("rndstrng", #lft, "global")
\end{luacode}
\RequirePackage{fontspec}
\IfFontExistsTF{Censor}{\newfontface\cnsrfnt[Scale=1.25,
%To prevent warnings
ItalicFont={Censor},
BoldFont={Censor},
BoldItalicFont={Censor},
]{Censor}}{\newfontface\cnsrfnt[
%To prevent warnings
ItalicFont={Deja Vu Sans},
BoldFont={Deja Vu Sans},
BoldItalicFont={Deja Vu Sans},
]{Deja Vu Sans}}



\newif\ifcnsr
\newcommand{\cnsr}[1]{
\ifcnsr
\begin{sloppypar}\renewcommand{\texttt}{\textit}\renewcommand{\ttfamily}{\itshape}\renewcommand{\sffamily}{\itshape}\renewcommand{\normalfont}{\itshape}
\cnsrfnt\rndstrng{#1}\hspace{0ex}
\end{sloppypar}\else
#1\fi}
\cnsrfalse


